name: Debugging the environment

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose the Terraform action"
        required: true
        default: "apply"
        type: choice
        options: [apply, destroy]

env:
  AWS_REGION: ap-south-1
  IMAGE_TAG: ${{ github.sha }}
  ECR_REGISTRY: 211125325699.dkr.ecr.ap-south-1.amazonaws.com

jobs:
  manage-monitoring:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      EKS_CLUSTER_NAME: support-eks
      ALB_ROLE_ARN: ${{ vars.AWS_ALB_CONTROLLER_ROLE_ARN }}

    steps:
    # ──────────────────────────────  SHARED SETUP  ──────────────────────────────
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_GITHUB_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - uses: azure/setup-kubectl@v3
      with: { version: "v1.32.0" }

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    # ──────────────────────────────  APPLY STEPS  ───────────────────────────────
    - name: Add Helm repos
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

    - name: Install / upgrade kube-prometheus-stack
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
          --namespace monitoring --create-namespace \
          -f monitoring/prometheus-values.yaml

    - name: Show Grafana admin password
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        echo -n "Admin password: "
        kubectl -n monitoring get secret kube-prometheus-stack-grafana \
          -o jsonpath='{.data.admin-password}' | base64 -d && echo

    - name: Apply custom alerts
      if: ${{ github.event.inputs.action == 'apply' }}
      run: kubectl apply -f monitoring/alert-rules.yaml

    - name: Apply Grafana dashboards
      if: ${{ github.event.inputs.action == 'apply' }}
      run: kubectl apply -f monitoring/grafana-dashboards.yaml

    # ─────────────────────────────  DESTROY STEPS  ──────────────────────────────
    - name: Uninstall kube-prometheus-stack & delete namespaces
      if: ${{ github.event.inputs.action == 'destroy' }}
      run: |
        echo "Uninstalling kube-prometheus-stack and deleting namespaces…"
        if helm status kube-prometheus-stack -n monitoring >/dev/null 2>&1; then
          helm uninstall kube-prometheus-stack -n monitoring
        fi
        kubectl delete ns monitoring frontend backend ingress-nginx --ignore-not-found

    # ─────────────────────────  FINAL VISIBILITY (BOTH MODES)  ──────────────────
    - name: List monitoring pods & services
      run: |
        echo "=== Cluster objects after ${ {github.event.inputs.action} } ==="
        kubectl get ns
        kubectl get all -n monitoring || true
        kubectl get all -n frontend   || true
        kubectl get all -n backend    || true
